server:
  port: 9090
  address:
    127.0.0.1
  use-forward-headers: true
  servlet:
    context-path: /api
auth:
  datasource:
    url: jdbc:sqlserver://ec2-52-91-55-108.compute-1.amazonaws.com;database=CaepiaLoginDB
    username: CaepiaLoginAppUsr
    password: CLAUusr2018login
    driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
app:
  datasource:
    url: jdbc:sqlserver://ec2-52-91-55-108.compute-1.amazonaws.com;database=CaepiaDemoBD
    username: CaepiaDemoAppUsr
    password: CDAUusr2018demo
    driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
spring:
  main:
    banner-mode: console
  h2:
    console:
      enabled: true
      path: /console
  #  datasource:
  #    url: jdbc:sqlserver://ec2-52-91-55-108.compute-1.amazonaws.com;database=CaepiaLoginDB
  #    username: CaepiaLoginAppUsr
  #    password: CLAUusr2018login
  #    driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
  tomcat:
    max-wait: 20000
    max-active: 50
    max-idle: 20
    min-idle: 15
  jpa:
    hibernate:
#      ddl-auto: create-drop
      ddl-auto: validate
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      hibernate:
        dialect: org.hibernate.dialect.SQLServer2012Dialect
        format_sql: true
    show-sql: true

security:
  jwt:
    token:
      secret-key: caepia-key
      expire-length: 36000

UserController:
  signin: Sign in to Caepia application, authenticates user and returns its JWT token
  signup: Creates a new user into Caepia application and returns its JWT token
  delete: Deletes specific user by username
  search: Returns specific user by username
  me: Returns current signed in user's data
  changePassword: Change password for requested user
CatalogController:
  getVendorsByCenterId: Retrieves a list of authorized vendors for a particular center
  getVendorByCenterId: Retrieves information about an authorized vendor
  getVendorFamilies: Retrieves all families for a particular vendor
  getVendorProducts: Retrieves all products for a particular vendor and family
  getVendorProduct: Retrieves information about a particular product
  changeVendorProductBookmark: Adds or removes a product from bookmarks
  getPurchasesTrendsByCenterIdVendorIdProductId: get trends values for a particular center, vendor and product.
OrderController:
  getOrdersByCenterId: Retrieves a list of orders header for a particular center
  getOrderByOrderId: Retrieves header information about a particular order
  getOrdersRowsByOrderId: Retrieves rows information about a particular order
  sendOrder: Execute the send order operative
  createOrderHeader: Create new order
DocumentController:
  getAllDocuments: Retrieves a list of documents